<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.april.house.biz.mapper.UserMapper">

    <insert id="insert">
        insert into user (
            name,
            phone,
            email,
            aboutme,
            passwd,
            salt,
            avatar,
            type,
            agency_id,
            create_time,
            enable)
        VALUES (
            #{name},
            #{phone},
            #{email},
            #{aboutme},
            #{passwd},
            #{salt},
            #{avatar},
            #{type},
            #{agencyId},
            #{createTime},
            #{enable}
        )
    </insert>

    <sql id="userBaseFields">
        u.id,
        u.name,
        u.phone,
        u.email,
        u.aboutme,
        u.passwd,
        u.salt,
        u.avatar,
        u.type,
        u.create_time,
        u.enable,
        u.agency_id
    </sql>
    <update id="updateByEmail">
        update user
        <set>
            <if test="phone != null and phone != '' ">
                phone = #{phone},
            </if>
            <if test="name != null and name != '' ">
                name = #{name},
            </if>
            <if test="aboutme != null and aboutme != '' ">
                aboutme = #{aboutme},
            </if>
            <if test="enable != null">
                enable = #{enable},
            </if>
            <if test="updateTime != null">
               update_time = #{updateTime},
            </if>
        </set>
        where email = #{email}
    </update>
    <update id="updatePassword">
        update user
        set passwd = #{passwd}, salt = #{salt}, update_time = #{updateTime}
        where email = #{email}
    </update>

    <delete id="deleteByEmail">
        delete from user
        where email = #{email}
    </delete>

    <select id="selectUsersByQuery" resultType="user">
        select <include refid="userBaseFields"/>
        from user u
        <where>
            <if test="id != null and id != 0">
                id = #{id}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="enable != null">
                and enable = #{enable}
            </if>
            <if test="type != null and type !=0">
                and type = #{type}
            </if>
        </where>
    </select>


    <sql id="agentQueryCondition">
        <where>
            enable = 1 and type = 2
            <if test="user.id != null and user.id != 0">
                and id = #{user.id}
            </if>
            <if test="user.email != null and user.email != ''">
                and email = #{user.email}
            </if>
            <if test="user.agencyId != null and user.agencyId != 0">
                and agency_id = #{user.agencyId}
            </if>
        </where>
    </sql>

    <select id="selectAgent" resultType="user">
        select *
        from user
        <include refid="agentQueryCondition"/>
    </select>

    <resultMap id="agentDetail" type="user">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="aboutme" property="aboutme"/>
        <result column="avatar" property="avatar"/>
        <result column="create_time" property="createTime"/>
        <result column="agency_id" property="agencyId"/>
        <result column="a_agency_name" property="agencyName"/>
    </resultMap>

    <select id="selectAgentDetail" resultMap="agentDetail">
        select <include refid="userBaseFields"/> , a.name as a_agency_name from user u left join agency a on u.agency_id = a.id
        where u.id = #{agentId} and u.type = 2
    </select>

</mapper>